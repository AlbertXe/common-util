public class JJdkDynamicAopProxy implements JAopProxy, InvocationHandler {

    //AdvisedSupport中保存着aop的配置信息以及代理对象的信息
    private JAdvisedSupport advised;

    public JJdkDynamicAopProxy(JAdvisedSupport advised) {
        this.advised = advised;
    }

    @Override
    public Object getProxy() {
        return getProxy(this.getClass().getClassLoader());
    }

    @Override
    public Object getProxy(ClassLoader classLoader) {
        return Proxy.newProxyInstance(classLoader, this.advised.getTargetClass().getInterfaces(), this);
    }

    @Override
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        List<Object> chain = this.advised.getInterceptorsAndDynamicInterceptionAdvice(method, this.advised.getTargetClass());

        JMethodInvocation mi = new JMethodInvocation(proxy, this.advised.getTarget(), method, args, this.advised.getTargetClass(), chain);
        return mi;
    }

}
